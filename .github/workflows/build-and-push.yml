name: build-and-push

run-name: 构建镜像并推送仓库 ${{ github.event.inputs.dockerImageTag }} (${{ github.event.inputs.registry }})

on:
  workflow_dispatch:
    inputs:
      dockerImageTag:
        description: 'Docker Image Tag'
        default: 'v1.0.0-dev'
        required: true
      architecture:
        description: 'Architecture'
        required: true
        default: 'linux/amd64'
        type: choice
        options:
          - linux/amd64
          - linux/arm64
          - linux/amd64,linux/arm64
      registry:
        description: 'Push To Registry'
        required: true
        default: 'fit2cloud-registry'
        type: choice
        options:
          - fit2cloud-registry

jobs:
  build-and-push-to-fit2cloud-registry:
    if: ${{ contains(github.event.inputs.registry, 'fit2cloud') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout specific repository
        uses: actions/checkout@v3
        with:
          repository: cordys-dev/cordys-crm
          token: ${{ secrets.GH_TOKEN }}  # 使用 GitHub token

      - name: Change to cordys-crm directory
        run: ls -la

      - name: Prepare
        id: prepare
        run: |
          DOCKER_IMAGE=${{ secrets.FIT2CLOUD_REGISTRY_HOST }}/cordys/cordys-crm
          DOCKER_PLATFORMS=${{ github.event.inputs.architecture }}
          TAG_NAME=${{ github.event.inputs.dockerImageTag }}
          if [[ ${TAG_NAME} == *dev* ]]; then
            DOCKER_IMAGE_TAGS="--tag ${DOCKER_IMAGE}:${TAG_NAME}"
          else
            DOCKER_IMAGE_TAGS="--tag ${DOCKER_IMAGE}:${TAG_NAME} --tag ${DOCKER_IMAGE}:latest"
          fi
          echo ::set-output name=buildx_args::--platform ${DOCKER_PLATFORMS} \
            --build-arg DOCKER_IMAGE_TAG=${{ github.event.inputs.dockerImageTag }} --build-arg BUILD_AT=$(TZ=Asia/Shanghai date +'%Y-%m-%dT%H:%M') --build-arg GITHUB_COMMIT=${GITHUB_SHA::8} --no-cache \
            --build-arg CRM_VERSION=${{ github.event.inputs.dockerImageTag }} \
            ${DOCKER_IMAGE_TAGS} .

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to FIT2CLOUD Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.FIT2CLOUD_REGISTRY_HOST }}
          username: ${{ secrets.FIT2CLOUD_REGISTRY_USERNAME }}
          password: ${{ secrets.FIT2CLOUD_REGISTRY_PASSWORD }}

      - name: Docker Buildx (build-and-push)
        run: |
          docker buildx build --output "type=image,push=true" ${{ steps.prepare.outputs.buildx_args }} -f installer/Dockerfile

      - name: Set environment variables for Maven
        run: |
          echo "FIT2CLOUD_MAVEN_USERNAME=${{ secrets.FIT2CLOUD_MAVEN_USERNAME }}" >> $GITHUB_ENV
          echo "FIT2CLOUD_MAVEN_PASSWORD=${{ secrets.FIT2CLOUD_MAVEN_PASSWORD }}" >> $GITHUB_ENV

      - name: Upload JAR to Maven Repository
        run: |
          JAR_VERSION=$(./mvnw help:evaluate -Dexpression=revision -q -DforceStdout || echo "1.0.x")
          echo "Using Jar version: $JAR_VERSION"

          ./mvnw deploy:deploy-file \
            -Dfile=backend/crm/target/crm-${JAR_VERSION}.jar \
            -DrepositoryId=cordys \
            -Durl=https://repository.fit2cloud.com/repository/cordys/ \
            -DgroupId=io.cordys \
            -DartifactId=crm \
            -Dversion=${JAR_VERSION} \
            -Dpackaging=jar \
            -s=./.mvn/wrapper/settings.xml
