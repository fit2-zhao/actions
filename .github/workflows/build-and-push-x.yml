name: Build and Push CE & EE Images

on:
  workflow_dispatch:
    inputs:
      dockerImageTag:
        description: 'Docker Image Tag'
        required: true
        default: 'dev'
      architecture:
        description: 'Target Architecture'
        required: true
        default: 'linux/amd64'
        type: choice
        options:
          - linux/amd64
          - linux/arm64
          - linux/amd64,linux/arm64

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      REGISTRY: ${{ secrets.FIT2CLOUD_REGISTRY_HOST }}
      CE_IMAGE: ${{ secrets.FIT2CLOUD_REGISTRY_HOST }}/cordys/cordys-crm-ce
      EE_IMAGE: ${{ secrets.FIT2CLOUD_REGISTRY_HOST }}/cordys/cordys-crm-ee
      TAG: ${{ github.event.inputs.dockerImageTag }}
      PLATFORMS: ${{ github.event.inputs.architecture }}

    steps:
      - name: Checkout CE Repository
        uses: actions/checkout@v3
        with:
          repository: cordys-dev/cordys-crm
          token: ${{ secrets.GH_TOKEN }}

      - name: Set up Java and Cache Maven
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

#      - name: Build and Install CE to Local Maven
#        run: |
#          mvnw clean install -DskipTests

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.FIT2CLOUD_REGISTRY_USERNAME }}
          password: ${{ secrets.FIT2CLOUD_REGISTRY_PASSWORD }}

      - name: Build & Push CE Image (and Load Locally)
        run: |
          if [[ "${TAG}" == "dev" ]]; then
            CE_TAGS="--tag ${CE_IMAGE}:${TAG}"
          else
            CE_TAGS="--tag ${CE_IMAGE}:${TAG} --tag ${CE_IMAGE}:latest"
          fi
          docker buildx build \
            --platform ${PLATFORMS} \
            ${CE_TAGS} \
            --build-arg CRM_VERSION=${TAG}-$(git rev-parse --short HEAD) \
            --load \
            --push \
            -f installer/Dockerfile .

      - name: Checkout EE (XPack) Repository
        uses: actions/checkout@v3
        with:
          repository: cordys-dev/cordys-crm-xpack
          token: ${{ secrets.GH_TOKEN }}

      - name: Set up Java for XPack
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Build XPack JAR
        run: |
          mvnw clean package -DskipTests

      - name: Extract XPack Artifact
        id: xpack
        run: |
          JAR=$(ls target/*.jar | head -n 1)
          echo "JAR_PATH=$JAR" >> $GITHUB_ENV

      - name: Build & Push EE Image via Container Commit
        run: |
          docker pull ${CE_IMAGE}:${TAG}
          docker create --name temp-ce ${CE_IMAGE}:${TAG}
          docker cp ${{ env.JAR_PATH }} temp-ce:/app/lib/cordys-crm-xpack.jar
          docker commit temp-ce ${EE_IMAGE}:${TAG}
          docker push ${EE_IMAGE}:${TAG}
          docker rm temp-ce

      - name: Recreate Git Tag
        if: success() && github.event.inputs.dockerImageTag != 'dev'
        run: |
          git config --global user.name 'fit2-zhao'
          git config --global user.email 'yong.zhao@fit2cloud.com'
          git fetch --prune --tags
          if git tag -l "${TAG}"; then git tag -d "${TAG}"; git push --delete origin "${TAG}"; fi
          git tag -a "${TAG}" -m "Release ${TAG}"
          git push origin "${TAG}"
